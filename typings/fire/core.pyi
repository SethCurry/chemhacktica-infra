from _typeshed import Incomplete
from fire import completion as completion, decorators as decorators, formatting as formatting, helptext as helptext, inspectutils as inspectutils, interact as interact, parser as parser, trace as trace, value_types as value_types
from fire.console import console_io as console_io
from typing import Any

def Fire(component: Any | None = None, command: Any | None = None, name: Any | None = None, serialize: Any | None = None) -> None: ...
def Display(lines: Any, out: Any) -> None: ...
def CompletionScript(name, component, shell): ...

class FireError(Exception): ...

class FireExit(SystemExit):
    trace: Incomplete
    def __init__(self, code, component_trace) -> None: ...
